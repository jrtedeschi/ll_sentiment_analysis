name: Deploy Infrastructure

on:
  push:
    branches:
      - main

jobs:

  deploy:
    runs-on: ubuntu-latest
    permissions:
        id-token: write
        contents: read
        packages: read
    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1.1.1
        with: 
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          create_credentials_file: true
          access_token_lifetime: '300s'
          cleanup_credentials: false


      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: 'gcloud test'
        run: |-
          gcloud services list

      - name: Generate Zip file
        run: |
          mkdir terraform/cloud_function
          cd cloud_function
          zip source.zip main.py requirements.txt 
          mv source.zip ../terraform/cloud_function
          cd ..
          echo "Zip file created"

      - name: Change Directory
        run: cd terraform
        
      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        
        with:
          terraform_version: "1.0.0"

      # Step 3: Initialize Terraform
      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      # Step 4: Deploy Infrastructure using Terraform
      - name: Terraform plan
        working-directory: ./terraform
        env:
            TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
            TF_VAR_region: 'us-central1'
            TF_VAR_service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
            TF_VAR_bucket_name: '${{ secrets.PROJECT_ID }}-classify-emails'

        run: terraform plan

      - name: Deploy Infrastructure
        working-directory: ./terraform
        env:
            TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
            TF_VAR_region: 'us-central1'
            TF_VAR_service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
            TF_VAR_bucket_name: '${{ secrets.PROJECT_ID }}-classify-emails'


        run: terraform apply -auto-approve